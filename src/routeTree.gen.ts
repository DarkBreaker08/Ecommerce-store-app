/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShopImport } from './routes/shop'
import { Route as HomeImport } from './routes/home'
import { Route as BlogImport } from './routes/blog'

// Create/Update Routes

const ShopRoute = ShopImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const BlogRoute = BlogImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/blog': typeof BlogRoute
  '/home': typeof HomeRoute
  '/shop': typeof ShopRoute
}

export interface FileRoutesByTo {
  '/blog': typeof BlogRoute
  '/home': typeof HomeRoute
  '/shop': typeof ShopRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/blog': typeof BlogRoute
  '/home': typeof HomeRoute
  '/shop': typeof ShopRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/blog' | '/home' | '/shop'
  fileRoutesByTo: FileRoutesByTo
  to: '/blog' | '/home' | '/shop'
  id: '__root__' | '/blog' | '/home' | '/shop'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  BlogRoute: typeof BlogRoute
  HomeRoute: typeof HomeRoute
  ShopRoute: typeof ShopRoute
}

const rootRouteChildren: RootRouteChildren = {
  BlogRoute: BlogRoute,
  HomeRoute: HomeRoute,
  ShopRoute: ShopRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/blog",
        "/home",
        "/shop"
      ]
    },
    "/blog": {
      "filePath": "blog.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/shop": {
      "filePath": "shop.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
